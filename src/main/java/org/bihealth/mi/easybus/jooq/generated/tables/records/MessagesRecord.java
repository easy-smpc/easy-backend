/*
 * This file is generated by jOOQ.
 */
package org.bihealth.mi.easybus.jooq.generated.tables.records;


import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;

import org.bihealth.mi.easybus.jooq.generated.tables.Messages;
import org.bihealth.mi.easybus.jooq.generated.tables.interfaces.IMessages;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.10"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "messages",
    schema = "public",
    indexes = {
        @Index(name = "userscopeidx", columnList = "receiver ASC, scope ASC")
    }
)
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> implements Record4<Integer, String, String, String>, IMessages {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.messages.id</code>.
     */
    @Override
    public MessagesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.messages.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 32)
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.messages.receiver</code>.
     */
    @Override
    public MessagesRecord setReceiver(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.messages.receiver</code>.
     */
    @Column(name = "receiver", nullable = false)
    @Override
    public String getReceiver() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.messages.scope</code>.
     */
    @Override
    public MessagesRecord setScope(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.messages.scope</code>.
     */
    @Column(name = "scope", nullable = false)
    @Override
    public String getScope() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.messages.content</code>.
     */
    @Override
    public MessagesRecord setContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.messages.content</code>.
     */
    @Column(name = "content", nullable = false)
    @Override
    public String getContent() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Messages.MESSAGES.ID;
    }

    @Override
    public Field<String> field2() {
        return Messages.MESSAGES.RECEIVER;
    }

    @Override
    public Field<String> field3() {
        return Messages.MESSAGES.SCOPE;
    }

    @Override
    public Field<String> field4() {
        return Messages.MESSAGES.CONTENT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getReceiver();
    }

    @Override
    public String component3() {
        return getScope();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getReceiver();
    }

    @Override
    public String value3() {
        return getScope();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public MessagesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessagesRecord value2(String value) {
        setReceiver(value);
        return this;
    }

    @Override
    public MessagesRecord value3(String value) {
        setScope(value);
        return this;
    }

    @Override
    public MessagesRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessagesRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMessages from) {
        setId(from.getId());
        setReceiver(from.getReceiver());
        setScope(from.getScope());
        setContent(from.getContent());
    }

    @Override
    public <E extends IMessages> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Integer id, String receiver, String scope, String content) {
        super(Messages.MESSAGES);

        setId(id);
        setReceiver(receiver);
        setScope(scope);
        setContent(content);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(org.bihealth.mi.easybus.jooq.generated.tables.pojos.Messages value) {
        super(Messages.MESSAGES);

        if (value != null) {
            setId(value.getId());
            setReceiver(value.getReceiver());
            setScope(value.getScope());
            setContent(value.getContent());
        }
    }
}
